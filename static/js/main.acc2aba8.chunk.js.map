{"version":3,"sources":["components/Loading/Loading.tsx","appRoutes.ts","pages/NotFound/NotFound.tsx","AppRouter.tsx","layout/HomeLayout.tsx","reportWebVitals.ts","index.tsx"],"names":["Loading","align","direction","style","width","height","justifyContent","paddingTop","tip","AppRoutes","Home","MinimumWageScatterPlot","MinimumWageGeospatialChart","MinimumWageGeospatialChartIterated","MinimumWageLineChart","MinimumWageLineChartLookUp","MinimumWageDatasetInfo","AvocadoScatterPlot","AvocadoDatasetInfo","HurricaneScatterPlot","HurricaneGeospatialChart","HurricaneDatasetInfo","Text","Typography","NotFound","lazy","MinimumWageInfo","AvocadoInfo","HurricaneInfo","AppRouter","exact","path","to","component","Content","Layout","Header","SubMenu","Menu","MIN_WAGE_TITLE","AVOCADO_TITLE","HURRICANE_TITLE","HomeLayout","selectedTab","title","location","useLocation","useState","collapsed","setCollapsed","pathname","includes","name","content","minHeight","bodyStyle","backgroundColor","headerStyle","border","placement","visible","onClose","theme","selectedKeys","mode","icon","DollarCircleOutlined","Item","AppleOutlined","FireOutlined","type","onClick","MenuOutlined","Suspense","fallback","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.acc2aba8.chunk.js","sourcesContent":["import { Space, Spin } from 'antd';\n\nexport const Loading: React.FC = () => (\n  <Space\n    align=\"center\"\n    direction=\"horizontal\"\n    style={{\n      width: '100%',\n      height: '100%',\n      justifyContent: 'center',\n      paddingTop: 100,\n    }}\n  >\n    <Spin tip=\"Loading...\" />\n  </Space>\n);\n","export const AppRoutes = {\n  Home: '/',\n  MinimumWageScatterPlot: '/minimum-wage/scatter-plot',\n  MinimumWageGeospatialChart: '/minimum-wage/geospatial',\n  MinimumWageGeospatialChartIterated: '/minimum-wage/geospatial/iterated',\n  MinimumWageLineChart: '/minimum-wage/line-chart',\n  MinimumWageLineChartLookUp: '/minimum-wage/line-chart/:state',\n  MinimumWageDatasetInfo: '/minimum-wage/info',\n  AvocadoScatterPlot: '/avocado/scatter-plot',\n  AvocadoDatasetInfo: '/avocado/info',\n  HurricaneScatterPlot: '/hurricane/scatter-plot',\n  HurricaneGeospatialChart: '/hurricane/geospatial',\n  HurricaneDatasetInfo: '/hurricane/info',\n};\n","import { Typography } from 'antd';\n\nconst { Text } = Typography;\n\nexport interface NotFoundProps {}\n\nexport const NotFound: React.FC<NotFoundProps> = () => {\n  return <Text>Not Found</Text>;\n};\n","import { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { AppRoutes } from './appRoutes';\nimport { NotFound } from './pages/NotFound';\nimport { lazy } from 'react';\n\n// minimum wage pages\nconst MinimumWageScatterPlot = lazy(\n  () => import('./pages/MinimumWage/ScatterPlotPage')\n);\nconst MinimumWageGeospatialChart = lazy(\n  () => import('./pages/MinimumWage/GeospatialChartPage')\n);\nconst MinimumWageGeospatialChartIterated = lazy(\n  () => import('./pages/MinimumWage/GeospatialChartIteratedPage')\n);\nconst MinimumWageLineChart = lazy(\n  () => import('./pages/MinimumWage/LineChartPage')\n);\nconst MinimumWageLineChartLookUp = lazy(\n  () => import('./pages/MinimumWage/LineChartLookUpPage')\n);\nconst MinimumWageInfo = lazy(() => import('./pages/MinimumWage/CSVInfoPage'));\n\n// avocado pages\nconst AvocadoScatterPlot = lazy(\n  () => import('./pages/Avocado/ScatterPlotPage')\n);\nconst AvocadoInfo = lazy(() => import('./pages/Avocado/CSVInfoPage'));\n\n// hurricane pages\nconst HurricaneScatterPlot = lazy(\n  () => import('./pages/Hurricane/ScatterPlotPage')\n);\nconst HurricaneGeospatialChart = lazy(\n  () => import('./pages/Hurricane/GeospatialChartPage')\n);\nconst HurricaneInfo = lazy(() => import('./pages/Hurricane/CSVInfoPage'));\n\nexport const AppRouter: React.FC = () => (\n  <Switch>\n    <Route exact path={AppRoutes.Home}>\n      <Redirect to={AppRoutes.MinimumWageScatterPlot} />\n    </Route>\n    <Route\n      exact\n      path={AppRoutes.MinimumWageScatterPlot}\n      component={MinimumWageScatterPlot}\n    />\n    <Route\n      exact\n      path={AppRoutes.MinimumWageGeospatialChartIterated}\n      component={MinimumWageGeospatialChartIterated}\n    />\n    <Route\n      exact\n      path={AppRoutes.MinimumWageGeospatialChart}\n      component={MinimumWageGeospatialChart}\n    />\n    <Route\n      exact\n      path={AppRoutes.MinimumWageLineChartLookUp}\n      component={MinimumWageLineChartLookUp}\n    />\n    <Route\n      exact\n      path={AppRoutes.MinimumWageLineChart}\n      component={MinimumWageLineChart}\n    />\n    <Route\n      exact\n      path={AppRoutes.MinimumWageDatasetInfo}\n      component={MinimumWageInfo}\n    />\n    <Route\n      exact\n      path={AppRoutes.AvocadoScatterPlot}\n      component={AvocadoScatterPlot}\n    />\n    <Route exact path={AppRoutes.AvocadoDatasetInfo} component={AvocadoInfo} />\n    <Route\n      exact\n      path={AppRoutes.HurricaneScatterPlot}\n      component={HurricaneScatterPlot}\n    />\n    <Route\n      exact\n      path={AppRoutes.HurricaneGeospatialChart}\n      component={HurricaneGeospatialChart}\n    />\n    <Route\n      exact\n      path={AppRoutes.HurricaneDatasetInfo}\n      component={HurricaneInfo}\n    />\n    <Route component={NotFound} />\n  </Switch>\n);\n","import './HomeLayout.css';\n\nimport {\n  AppleOutlined,\n  DollarCircleOutlined,\n  FireOutlined,\n  MenuOutlined,\n} from '@ant-design/icons';\nimport { Button, Drawer, Layout, Menu } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport React, { useState } from 'react';\n\nimport { AppRouter } from '../AppRouter';\nimport { AppRoutes } from '../appRoutes';\nimport { Helmet } from 'react-helmet-async';\nimport { Loading } from '../components/Loading/Loading';\n\nconst { Content, Header } = Layout;\nconst { SubMenu } = Menu;\n\nconst MIN_WAGE_TITLE = 'Minimum Wage Data';\nconst AVOCADO_TITLE = 'Avocado Data';\nconst HURRICANE_TITLE = 'Hurricane Data';\n\nexport interface HomeLayoutProps {}\n\nexport const HomeLayout: React.FC<HomeLayoutProps> = () => {\n  const location = useLocation();\n  const [collapsed, setCollapsed] = useState(false);\n\n  let selectedTab: string;\n  let title: string;\n  if (location.pathname.includes('hurricane')) {\n    selectedTab = '3';\n    title = HURRICANE_TITLE;\n  } else if (location.pathname.includes('avocado')) {\n    selectedTab = '2';\n    title = AVOCADO_TITLE;\n  } else {\n    selectedTab = '1';\n    title = MIN_WAGE_TITLE;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n        <meta name=\"description\" content={title} />\n      </Helmet>\n      <Layout style={{ minHeight: '100vh' }}>\n        <Drawer\n          bodyStyle={{ backgroundColor: '#001628' }}\n          headerStyle={{\n            border: 'none',\n          }}\n          title=\"Pages\"\n          width={250}\n          placement=\"left\"\n          visible={collapsed}\n          onClose={() => setCollapsed(false)}\n        >\n          <Menu theme=\"dark\" selectedKeys={[selectedTab]} mode=\"inline\">\n            <SubMenu\n              key=\"1\"\n              icon={<DollarCircleOutlined />}\n              title={MIN_WAGE_TITLE}\n            >\n              <Menu.Item key=\"Min-Wage-Scatter-Plot\">\n                <Link to={AppRoutes.MinimumWageScatterPlot}>Scatter Plot</Link>\n              </Menu.Item>\n              <Menu.Item key=\"Min-Wage-Initial-Geospatial\">\n                <Link to={AppRoutes.MinimumWageGeospatialChart}>\n                  Geospatial Chart (Initial)\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"Min-Wage-Iterated-Geospatial\">\n                <Link to={AppRoutes.MinimumWageGeospatialChartIterated}>\n                  Geospatial Chart (Iterated)\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"Min-Wage-Line-Chart\">\n                <Link to={AppRoutes.MinimumWageLineChart}>Line Chart</Link>\n              </Menu.Item>\n              <Menu.Item key=\"Min-Wage-Dataset\">\n                <Link to={AppRoutes.MinimumWageDatasetInfo}>\n                  Dataset Information\n                </Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"2\" icon={<AppleOutlined />} title={AVOCADO_TITLE}>\n              <Menu.Item key=\"Avocado-Scatter-Plot\">\n                <Link to={AppRoutes.AvocadoScatterPlot}>Scatter Plot</Link>\n              </Menu.Item>\n              <Menu.Item key=\"Avocado-Dataset\">\n                <Link to={AppRoutes.AvocadoDatasetInfo}>\n                  Dataset Information\n                </Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"3\" icon={<FireOutlined />} title={HURRICANE_TITLE}>\n              <Menu.Item key=\"Hurricane-Scatter-Plot\">\n                <Link to={AppRoutes.HurricaneScatterPlot}>Scatter Plot</Link>\n              </Menu.Item>\n              <Menu.Item key=\"Hurricane-Geospatial\">\n                <Link to={AppRoutes.HurricaneGeospatialChart}>\n                  Geospatial Chart\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"Hurricane-Dataset\">\n                <Link to={AppRoutes.HurricaneDatasetInfo}>\n                  Dataset Information\n                </Link>\n              </Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Drawer>\n        <Layout>\n          <Header>\n            <Button type=\"primary\" onClick={() => setCollapsed(!collapsed)}>\n              <MenuOutlined />\n            </Button>\n          </Header>\n          <React.Suspense fallback={<Loading />}>\n            <Content style={{ margin: '16px 16px' }}>\n              <AppRouter />\n            </Content>\n          </React.Suspense>\n        </Layout>\n      </Layout>\n    </>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\n\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport { HelmetProvider } from 'react-helmet-async';\nimport { HomeLayout } from './layout/HomeLayout';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <HelmetProvider>\n      <QueryClientProvider client={queryClient}>\n        <Router>\n          <HomeLayout />\n        </Router>\n      </QueryClientProvider>\n    </HelmetProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}