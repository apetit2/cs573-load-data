{"version":3,"sources":["services/apis.ts","services/lib/maps.ts","services/lib/avocado.ts","services/lib/hurricane.ts","util/inflation.ts","services/lib/minimumWage.ts","services/hooks/useQuery.tsx","hooks/useFallback.tsx","hooks/useResizeChart.tsx","layout/PageLayout.tsx","pages/MinimumWage/constants.ts","components/AnimatedGroup/AnimatedGroup.tsx","util/currency.ts","components/ScatterPlot/AxisBottom.tsx","components/ScatterPlot/AxisLeft.tsx","components/ScatterPlot/ScatterPlot.tsx","components/ScatterPlot/ScatterPlotAxes.tsx","../node_modules/rc-switch/es/index.js","../node_modules/antd/es/switch/index.js","components/GeospatialChartIterated/YearSelector.tsx","hooks/useIncrementYear.tsx","pages/MinimumWage/ScatterPlotPage/ScatterPlotPage.tsx"],"names":["BASE_URL","API","MinimumWageCSV","AvocadoCSV","HurricaneCSV","RentCSV","WorldMap","USMap","fetchWorldMap","a","fetch","json","worldMap","fetchUSMap","usMap","parseCSV","row","index","columns","date","parse","Date","averagePrice","Number","AveragePrice","totalVolume","totalBags","smallBags","largeBags","xLargeBags","type","year","region","month","getMonth","day","getDate","rowType","fetchAvocadoCSV","csv","avocadoCSV","filter","convertLatLong","lat","direction","slice","coordinate","refinedCoordinate","id","ID","name","Name","time","event","Event","status","Status","latitude","Latitude","longitude","Longitude","maxWind","minPressure","lowWindNE","lowWindSE","lowWindSW","lowWindNW","moderateWindNE","moderateWindSE","moderateWindSW","moderateWindNW","highWindNE","highWindSE","highWindSW","highWindNW","getFullYear","fetchHurricaneCSV","hurricaneCSV","accountForInflation","fromCPI","dollars","parseMinimumCsv","Year","state","State","stateMinWage","stateMinWageTodayDollars","federalMinWage","federalMinWageTodayDollars","effectiveMinWage","effectiveMinWageTodayDollars","cpiAverage","depLaborUncleanData","depLaborCleanedLowValue","depLaborCleanedLowValueTodayDollars","depLaborCleanedHighValue","depLaborCleanedHighValueTodayDollars","footnote","Footnote","parseRentCsv","studio","oneBedroom","twoBedroom","threeBedroom","fourBedroom","population","Population","merge","rents","minWages","map","minWage","rent","find","fetchMinimumWageCSV","useMinimumWageQuery","options","useQuery","useAvocadoQuery","useHurricaneQuery","useWorldMapQuery","useUSMapQuery","Text","Typography","useFallback","isLoading","isError","data","fallback","strong","style","color","initialDimensions","height","width","marginTop","marginRight","marginBottom","marginLeft","useResizeChart","ref","useRef","useState","setWidth","setHeight","useEffect","resizeObserver","ResizeObserver","entries","Array","isArray","length","entry","contentRect","current","element","observe","unobserve","newChartDimensions","dimensions","parsedDimensions","boundedHeight","Math","max","boundedWidth","combineChartDimensions","PageLayout","pageTitle","menuItems","description","generateChart","showDescriptionTitle","size","justify","gutter","xs","fontSize","Constants","minWageUrl","rentUrl","AnimatedGroup","forwardRef","children","rest","opacity","useSpring","from","delay","g","currencyFormatter","Intl","NumberFormat","currency","AxisBottom","xScale","tickOffset","ticks","tick","stroke","transform","y2","dy","textAnchor","y","AxisLeft","yScale","x2","x","ScatterPlot","margin","xLabel","yLabel","radius","showTooltip","xValue","useCallback","yValue","colorValue","undefined","xRange","useMemo","extent","yRange","paddedHeight","top","bottom","paddedWidth","left","right","scaleLinear","domain","range","nice","colorScale","uniqueOrdinalValues","Set","numUniqueOrdinalValues","_","interpolateTurbo","colorRange","scaleOrdinal","marginsForAxes","toString","yAxisLabelOffset","yAxisLabel","className","cx","cy","r","fill","place","effect","getContent","val","xAndY","value","tmp","el","findFieldByValue","format","Option","Select","ScatterPlotAxes","selectedX","selectedY","selectedColor","onSelectX","onSelectY","onSelectColor","labels","numericOptions","Object","col","stringOptions","sm","md","lg","maxWidth","defaultValue","onChange","key","Switch","React","_ref","_classNames","_ref$prefixCls","prefixCls","checked","defaultChecked","disabled","loadingIcon","checkedChildren","unCheckedChildren","onClick","onKeyDown","restProps","_objectWithoutProperties","_useMergedState","useMergedState","_useMergedState2","_slicedToArray","innerChecked","setInnerChecked","triggerChange","newChecked","mergedChecked","switchClassName","classNames","_defineProperty","concat","assign","role","e","which","KeyCode","LEFT","RIGHT","ret","displayName","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","_a","customizePrefixCls","customizeSize","loading","_a$className","props","devWarning","_React$useContext","ConfigContext","getPrefixCls","SizeContext","LoadingOutlined","classes","Wave","insertExtraNode","RcSwitch","_extends","__ANT_SWITCH","YearSelector","defaultYear","minYear","maxYear","incrementYearDisabled","toggleIncrementYear","justifyContent","min","useIncrementYear","shouldIncrement","currentSelectedYear","setYear","interval","setInterval","clearInterval","ScatterPlotPage","shouldDisableAutoIncrement","setShouldDisableAutoIncrementYear","selectedYear","setSelectedYear","filteredData","to","pathname","target"],"mappings":"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","file":"static/js/8.d72309f4.chunk.js","sourcesContent":["const BASE_URL = 'https://gist.githubusercontent.com/apetit2/';\n\nexport const API = {\n  MinimumWageCSV: `${BASE_URL}212a7cd715f8ba34eb637d014fffb12f/raw/0cc5e300ed1747be91ec391f4546e1a44c90d810/minimum-wage-data.csv`,\n  AvocadoCSV: `${BASE_URL}a3a8f61f0c56a1d1448804a584b7c1bb/raw/53be30feacedf088d4b8f609ccc509ca1e52591d/avocado.csv`,\n  HurricaneCSV: `${BASE_URL}5c1aa857558bc646281763252ea13d57/raw/daa565a0dc8c0dd99a63d162efad23037b067678/pacific.csv`,\n  RentCSV: `${BASE_URL}aaa39169ab48ff313cfb2bfe12486fef/raw/6d5308a46301f7f2b08c6974a3be7e7e138434f8/rent.csv`,\n  WorldMap: 'https://unpkg.com/world-atlas@1.1.4/world/110m.json',\n  USMap: 'https://unpkg.com/us-atlas@3.0.0/states-10m.json',\n};\n","import { USMap, WorldMap } from '../models/maps';\n\nimport { API } from '../apis';\n\nexport const fetchWorldMap = async () => {\n  const worldMap = (await (await fetch(API.WorldMap)).json()) as WorldMap;\n  return worldMap;\n};\n\nexport const fetchUSMap = async () => {\n  const usMap = (await (await fetch(API.USMap)).json()) as USMap;\n  return usMap;\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { DSVParsedArray, DSVRowString, csv } from 'd3';\n\nimport { API } from '../apis';\nimport { Avocado } from '../models/avocado';\nimport { parse } from 'date-fns';\n\nconst parseCSV: (\n  row: DSVRowString<string>,\n  index: number,\n  columns: string[]\n) => Avocado = (row, index, columns) => {\n  const date = parse(row.Date ?? '', 'yyyy-MM-dd', new Date());\n  return {\n    date: row.Date,\n    averagePrice: Number(row.AveragePrice),\n    totalVolume: Number(row['Total Volume']),\n    '4046': Number(row['4046']),\n    '4225': Number(row['4225']),\n    '4770': Number(row['4770']),\n    totalBags: Number(row['Total Bags']),\n    smallBags: Number(row['Small Bags']),\n    largeBags: Number(row['Large Bags']),\n    xLargeBags: Number(row['XLarge Bags']),\n    type: row.type,\n    year: Number(row.year),\n    region: row.region,\n    month: date.getMonth() + 1,\n    day: date.getDate(),\n    rowType: 'Avocado',\n  };\n};\n\nexport const fetchAvocadoCSV = async () => {\n  const avocadoCSV = (await csv(API.AvocadoCSV, parseCSV)).filter(\n    (row) => row.year !== 0\n  ) as DSVParsedArray<Avocado>;\n  return avocadoCSV;\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { DSVRowString, csv } from 'd3';\n\nimport { API } from '../apis';\nimport { Hurricane } from '../models/hurricane';\nimport { parse } from 'date-fns';\n\nconst convertLatLong = (lat: string | undefined) => {\n  const direction = lat?.slice(-1);\n  const coordinate = Number(lat?.slice(0, -1));\n  let refinedCoordinate = 0;\n  switch (direction) {\n    case 'W':\n    case 'S':\n      refinedCoordinate = Number(coordinate) / -1;\n      break;\n    default:\n      refinedCoordinate = Number(coordinate);\n  }\n\n  return refinedCoordinate;\n};\n\nconst parseCSV: (\n  row: DSVRowString<string>,\n  index: number,\n  columns: string[]\n) => Hurricane = (row, index, columns) => {\n  const date = parse(row.Date ?? '', 'yyyyMMdd', new Date());\n\n  return {\n    id: row.ID,\n    name: row.Name,\n    date: row.Date,\n    time: Number(row.time),\n    event: row.Event,\n    status: row.Status,\n    latitude: convertLatLong(row.Latitude),\n    longitude: convertLatLong(row.Longitude),\n    maxWind: Number(row['Maximum Wind']),\n    minPressure: Number(row['Minimum Pressure']),\n    lowWindNE: Number(row['Low Wind NE']),\n    lowWindSE: Number(row['Low Wind SE']),\n    lowWindSW: Number(row['Low Wind SW']),\n    lowWindNW: Number(row['Low Wind NW']),\n    moderateWindNE: Number(row['Moderate Wind NE']),\n    moderateWindSE: Number(row['Moderate Wind SE']),\n    moderateWindSW: Number(row['Moderate Wind SW']),\n    moderateWindNW: Number(row['Moderate Wind NW']),\n    highWindNE: Number(row['High Wind NE']),\n    highWindSE: Number(row['High Wind SE']),\n    highWindSW: Number(row['High Wind SW']),\n    highWindNW: Number(row['High Wind NW']),\n    year: date.getFullYear(),\n    month: date.getMonth() + 1,\n    day: date.getDate(),\n    rowType: 'Hurricane',\n  };\n};\n\nexport const fetchHurricaneCSV = async () => {\n  const hurricaneCSV = await csv(API.HurricaneCSV, parseCSV);\n  return hurricaneCSV;\n};\n","const CPI_TODAY = 260.28;\n\nexport const accountForInflation = (fromCPI: number, dollars: number) => {\n  return (dollars * fromCPI) / CPI_TODAY;\n};\n","import { DSVRowString, csv, DSVParsedArray } from 'd3';\nimport { accountForInflation } from '../../util/inflation';\n\nimport { API } from '../apis';\nimport { MinimumWage, Rent } from '../models/minimumWage';\n\nconst parseMinimumCsv: (\n  row: DSVRowString<string>,\n  index: number,\n  columns: string[]\n) => MinimumWage = (row) => {\n  return {\n    year: Number(row.Year),\n    state: row.State,\n    stateMinWage: Number(row['State.Minimum.Wage']),\n    stateMinWageTodayDollars: Number(row['State.Minimum.Wage.2020.Dollars']),\n    federalMinWage: Number(row['Federal.Minimum.Wage']),\n    federalMinWageTodayDollars: Number(\n      row['Federal.Minimum.Wage.2020.Dollars']\n    ),\n    effectiveMinWage: Number(row['Effective.Minimum.Wage']),\n    effectiveMinWageTodayDollars: Number(\n      row['Effective.Minimum.Wage.2020.Dollars']\n    ),\n    cpiAverage: Number(row['CPI.Average']),\n    depLaborUncleanData: row['Department.Of.Labor.Uncleaned.Data'],\n    depLaborCleanedLowValue: Number(\n      row['Department.Of.Labor.Cleaned.Low.Value']\n    ),\n    depLaborCleanedLowValueTodayDollars: Number(\n      row['Department.Of.Labor.Cleaned.Low.Value.2020.Dollars']\n    ),\n    depLaborCleanedHighValue: Number(\n      row['Department.Of.Labor.Cleaned.High.Value']\n    ),\n    depLaborCleanedHighValueTodayDollars: Number(\n      row['Department.Of.Labor.Cleaned.High.Value.2020.Dollars']\n    ),\n    footnote: row.Footnote,\n    rowType: 'MinWage',\n  };\n};\n\nconst parseRentCsv: (\n  row: DSVRowString<string>,\n  index: number,\n  columns: string[]\n) => Rent = (row) => {\n  return {\n    state: row.State,\n    year: Number(row.Year),\n    studio: Number(row['Rent 0 BR']),\n    oneBedroom: Number(row['Rent 1 BR']),\n    twoBedroom: Number(row['Rent 2 BR']),\n    threeBedroom: Number(row['Rent 3 BR']),\n    fourBedroom: Number(row['Rent 4 BR']),\n    population: Number(row.Population),\n    rowType: 'Rent',\n  };\n};\n\nconst merge = (\n  rents: DSVParsedArray<Rent>,\n  minWages: DSVParsedArray<MinimumWage>\n) => {\n  const res = minWages.map((minWage) => {\n    const rent = rents.find(\n      (row) => row.year === minWage.year && row.state === minWage.state\n    );\n\n    if (!rent) {\n      return minWage;\n    }\n\n    return {\n      ...minWage,\n      studio: accountForInflation(minWage.cpiAverage!, rent.studio!),\n      oneBedroom: accountForInflation(minWage.cpiAverage!, rent.oneBedroom!),\n      twoBedroom: accountForInflation(minWage.cpiAverage!, rent.twoBedroom!),\n      threeBedroom: accountForInflation(\n        minWage.cpiAverage!,\n        rent.threeBedroom!\n      ),\n      fourBedroom: accountForInflation(minWage.cpiAverage!, rent.fourBedroom!),\n      population: rent.population,\n    } as MinimumWage;\n  });\n\n  return res as DSVParsedArray<MinimumWage>;\n};\n\nexport const fetchMinimumWageCSV = async () => {\n  const minWages = await csv(API.MinimumWageCSV, parseMinimumCsv);\n  const rents = await csv(API.RentCSV, parseRentCsv);\n\n  return merge(rents, minWages);\n};\n\nexport const fetchRentCSV = async () => {\n  const res = await csv(API.RentCSV, parseRentCsv);\n  return res;\n};\n","import { USMap, WorldMap } from '../models/maps';\nimport { UseQueryOptions, useQuery } from 'react-query';\nimport { fetchUSMap, fetchWorldMap } from '../lib/maps';\n\nimport { Avocado } from '../models/avocado';\nimport { DSVParsedArray } from 'd3-dsv';\nimport { Hurricane } from '../models/hurricane';\nimport { MinimumWage, Rent } from '../models/minimumWage';\nimport { fetchAvocadoCSV } from '../lib/avocado';\nimport { fetchHurricaneCSV } from '../lib/hurricane';\nimport { fetchMinimumWageCSV, fetchRentCSV } from '../lib/minimumWage';\n\nconst useMinimumWageQuery = (\n  options?: UseQueryOptions<DSVParsedArray<MinimumWage>, Error>\n) =>\n  useQuery<DSVParsedArray<MinimumWage>, Error>(\n    'minWage',\n    fetchMinimumWageCSV,\n    options\n  );\n\nconst useRentQuery = (options?: UseQueryOptions<DSVParsedArray<Rent>, Error>) =>\n  useQuery<DSVParsedArray<Rent>, Error>('rent', fetchRentCSV, options);\n\nconst useAvocadoQuery = (\n  options?: UseQueryOptions<DSVParsedArray<Avocado>, Error>\n) =>\n  useQuery<DSVParsedArray<Avocado>, Error>('avocado', fetchAvocadoCSV, options);\n\nconst useHurricaneQuery = (\n  options?: UseQueryOptions<DSVParsedArray<Hurricane>, Error>\n) =>\n  useQuery<DSVParsedArray<Hurricane>, Error>(\n    'hurricane',\n    fetchHurricaneCSV,\n    options\n  );\n\nconst useWorldMapQuery = (options?: UseQueryOptions<WorldMap, Error>) =>\n  useQuery<WorldMap, Error>('worldMap', fetchWorldMap, options);\n\nconst useUSMapQuery = (options?: UseQueryOptions<USMap, Error>) =>\n  useQuery<USMap, Error>('usMap', fetchUSMap, options);\n\nexport {\n  useAvocadoQuery,\n  useHurricaneQuery,\n  useMinimumWageQuery,\n  useWorldMapQuery,\n  useUSMapQuery,\n  useRentQuery,\n};\n","import { CSVRow } from '../services/models/shared';\nimport { DSVParsedArray } from 'd3-dsv';\nimport { Loading } from '../components/Loading/Loading';\nimport { Typography } from 'antd';\n\nconst { Text } = Typography;\n\nexport const useFallback = <T extends CSVRow>(\n  isLoading: boolean,\n  isError: boolean,\n  data?: DSVParsedArray<T>\n) => {\n  let fallback = null;\n\n  if (isError) {\n    fallback = (\n      <Text strong style={{ color: 'red' }}>\n        Failed To Load Dataset.\n      </Text>\n    );\n  }\n\n  if (isLoading) {\n    fallback = <Loading />;\n  }\n\n  if (!data && !isLoading) {\n    fallback = <Text strong>No Data Found.</Text>;\n  }\n\n  return { fallback };\n};\n","// adapted from https://wattenberger.com/blog/react-and-d3\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { useEffect, useRef, useState } from 'react';\n\ninterface Dimensions {\n  height: number;\n  width: number;\n  marginTop: number;\n  marginRight: number;\n  marginBottom: number;\n  marginLeft: number;\n}\n\ninterface CombinedDimensions extends Dimensions {\n  boundedHeight: number;\n  boundedWidth: number;\n}\n\nconst initialDimensions = {\n  height: 400,\n  width: 0,\n  marginTop: 10,\n  marginRight: 10,\n  marginBottom: 40,\n  marginLeft: 75,\n};\n\nconst combineChartDimensions: (dimensions: Dimensions) => CombinedDimensions = (\n  dimensions\n) => {\n  const parsedDimensions = {\n    ...dimensions,\n    marginTop: dimensions.marginTop || 10,\n    marginRight: dimensions.marginRight || 10,\n    marginBottom: dimensions.marginBottom || 40,\n    marginLeft: dimensions.marginLeft || 75,\n  } as Dimensions;\n\n  return {\n    ...parsedDimensions,\n    boundedHeight: Math.max(\n      parsedDimensions.height -\n        parsedDimensions.marginTop -\n        parsedDimensions.marginBottom,\n      0\n    ),\n    boundedWidth: Math.max(\n      parsedDimensions.width -\n        parsedDimensions.marginLeft -\n        parsedDimensions.marginRight,\n      0\n    ),\n  };\n};\n\nexport const useResizeChart = () => {\n  const ref = useRef<HTMLDivElement | null>(null);\n\n  const [width, setWidth] = useState(initialDimensions.width);\n  const [height, setHeight] = useState(initialDimensions.height);\n\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver((entries) => {\n      if (!Array.isArray(entries) || !entries.length) {\n        return;\n      }\n\n      const entry = entries[0];\n      if (width !== entry.contentRect.width) {\n        setWidth(entry.contentRect.width);\n      }\n\n      if (height !== entry.contentRect.height) {\n        setHeight(entry.contentRect.height);\n      }\n    });\n\n    if (ref.current) {\n      const element = ref.current;\n      resizeObserver.observe(element);\n\n      return () => resizeObserver.unobserve(element);\n    }\n\n    return () => null;\n  }, [height, width]);\n\n  const newChartDimensions = combineChartDimensions({\n    ...initialDimensions,\n    width,\n    height,\n  });\n\n  return { ref, dimensions: newChartDimensions };\n};\n","import { Col, Row, Space, Typography } from 'antd';\n\nimport { ReactElement } from 'react';\nimport { useResizeChart } from '../hooks/useResizeChart';\n\nconst { Text } = Typography;\n\nexport interface PageLayoutProps {\n  pageTitle: string;\n  generateChart: (dimensions: {\n    width: number;\n    height: number;\n  }) => ReactElement;\n  description?: ReactElement;\n  menuItems?: ReactElement;\n  showDescriptionTitle?: boolean;\n}\n\nexport const PageLayout: React.FC<PageLayoutProps> = ({\n  pageTitle,\n  menuItems,\n  description,\n  generateChart,\n  showDescriptionTitle = true,\n}) => {\n  const { ref, dimensions } = useResizeChart();\n\n  return (\n    <div style={{ width: '100%' }} ref={ref}>\n      <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\n        <Row style={{ width: '100%' }} justify=\"space-between\" gutter={[0, 24]}>\n          <Col xs={7}>\n            <Text strong style={{ fontSize: 32 }}>\n              {pageTitle}\n            </Text>\n          </Col>\n          <Col xs={13}>{menuItems}</Col>\n        </Row>\n        {generateChart(dimensions)}\n        <Space direction=\"vertical\">\n          {showDescriptionTitle && (\n            <Text strong style={{ fontSize: 24 }}>\n              Description\n            </Text>\n          )}\n          <Text style={{ fontSize: 14 }}>{description}</Text>\n        </Space>\n      </Space>\n    </div>\n  );\n};\n","export const Constants = {\n  minWageUrl:\n    'https://gist.github.com/apetit2/212a7cd715f8ba34eb637d014fffb12f',\n  rentUrl: 'https://gist.github.com/apetit2/aaa39169ab48ff313cfb2bfe12486fef',\n} as const;\n","import { forwardRef } from 'react';\nimport { animated, useSpring } from 'react-spring';\n\nexport interface AnimatedGroupProps extends React.HTMLAttributes<SVGGElement> {\n  transform?: string;\n}\n\nexport const AnimatedGroup = forwardRef<SVGGElement, AnimatedGroupProps>(\n  ({ children, ...rest }, ref) => {\n    const { opacity } = useSpring({\n      opacity: 1,\n      from: { opacity: 0 },\n      delay: 300,\n    });\n\n    return (\n      <animated.g ref={ref} {...rest} opacity={opacity}>\n        {children}\n      </animated.g>\n    );\n  }\n);\n","export const currencyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\n","import { ScaleLinear } from 'd3';\n\nexport interface AxisBottom {\n  xScale: ScaleLinear<number, number, never>;\n  height: number;\n  tickOffset?: number;\n}\n\nexport const AxisBottom: React.FC<AxisBottom> = ({\n  xScale,\n  height,\n  tickOffset = 3,\n}) => {\n  return (\n    <>\n      {xScale.ticks().map((tick) => (\n        <g\n          style={{ stroke: '#C0C0BB' }}\n          key={tick}\n          transform={`translate(${xScale(tick)}, 0)`}\n        >\n          <line y2={height} />\n          <text dy=\".71em\" textAnchor=\"middle\" y={height + tickOffset}>\n            {tick}\n          </text>\n        </g>\n      ))}\n    </>\n  );\n};\n","import { ScaleLinear } from 'd3';\n\nexport interface AxisLeftProps {\n  yScale: ScaleLinear<number, number, never>;\n  width: number;\n  tickOffset?: number;\n}\n\nexport const AxisLeft: React.FC<AxisLeftProps> = ({\n  yScale,\n  width,\n  tickOffset = 3,\n}) => (\n  <>\n    {yScale.ticks().map((tick) => (\n      <g\n        key={tick}\n        style={{ stroke: '#C0C0BB' }}\n        transform={`translate(0,${yScale(tick)})`}\n      >\n        <line x2={width} />\n        <text textAnchor=\"end\" x={-tickOffset} dy=\".32em\">\n          {tick}\n        </text>\n      </g>\n    ))}\n  </>\n);\n","/* eslint-disable react/no-array-index-key */\nimport {\n  DSVParsedArray,\n  extent,\n  interpolateTurbo,\n  scaleLinear,\n  scaleOrdinal,\n} from 'd3';\n\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { CSVRow } from '../../services/models/shared';\nimport { KeysMatching } from '../../types/shared';\nimport { AnimatedGroup } from '../AnimatedGroup';\nimport { PropsWithChildren, useCallback, useMemo } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { Space, Typography } from 'antd';\nimport { currencyFormatter } from '../../util/currency';\n\nconst { Text } = Typography;\n\nexport interface ScatterPlotProps<T extends CSVRow> {\n  width: number;\n  height: number;\n  margin: { top: number; right: number; bottom: number; left: number };\n  x: KeysMatching<T, number | undefined>;\n  y: KeysMatching<T, number | undefined>;\n  xLabel: string;\n  yLabel: string;\n  color?: KeysMatching<T, string | undefined>;\n  radius: number;\n  data: DSVParsedArray<T>;\n  opacity?: string;\n  showTooltip?: boolean;\n}\n\nexport const ScatterPlot = <T extends CSVRow>({\n  width,\n  height = 400,\n  margin,\n  x,\n  y,\n  xLabel,\n  yLabel,\n  color,\n  radius,\n  data,\n  showTooltip = false,\n  opacity = '.3',\n}: PropsWithChildren<ScatterPlotProps<T>>) => {\n  const xAxisLabelOffset = 50;\n\n  const xValue = useCallback((row: T) => row[x] as number, [x]);\n  const yValue = useCallback((row: T) => row[y] as number, [y]);\n  const colorValue = useCallback(\n    (row: T) => {\n      return color ? (row[color] as string) : undefined;\n    },\n    [color]\n  );\n\n  const xRange = useMemo(() => {\n    return extent(data, xValue) as [number, number];\n  }, [xValue, data]);\n\n  const yRange = useMemo(() => {\n    return extent(data, yValue) as [number, number];\n  }, [yValue, data]);\n\n  const paddedHeight = useMemo(() => {\n    return height - margin.top - margin.bottom;\n  }, [height, margin]);\n\n  const paddedWidth = useMemo(() => {\n    return width - margin.left - margin.right;\n  }, [width, margin]);\n\n  const xScale = useMemo(() => {\n    return scaleLinear().domain(xRange).range([0, paddedWidth]).nice();\n  }, [xRange, paddedWidth]);\n\n  const yScale = useMemo(() => {\n    return scaleLinear().domain(yRange).range([paddedHeight, 0]);\n  }, [yRange, paddedHeight]);\n\n  const { colorScale } = useMemo(() => {\n    if (color) {\n      const uniqueOrdinalValues = Array.from(\n        new Set(data.map(colorValue))\n      ) as string[];\n      const numUniqueOrdinalValues = uniqueOrdinalValues.length;\n      const range = uniqueOrdinalValues.map((_, index) => {\n        return interpolateTurbo(index / numUniqueOrdinalValues);\n      });\n\n      const scale = scaleOrdinal<string>()\n        .domain(data.map(colorValue as (row: T) => string))\n        .range(range);\n\n      return { colorRange: range, colorScale: scale };\n    }\n\n    return { colorRange: undefined, colorScale: undefined };\n  }, [colorValue, data, color]);\n\n  const marginsForAxes = useMemo(() => {\n    return {\n      ...margin,\n      left: yRange[1].toString().length * 8.75 + 20,\n    };\n  }, [yRange, margin]);\n\n  const yAxisLabelOffset = useMemo(() => {\n    return yRange[1].toString().length * 8.75 + 10;\n  }, [yRange]);\n\n  const yAxisLabel = useMemo(() => {\n    return (\n      <text\n        className=\"axis-label\"\n        textAnchor=\"middle\"\n        transform={`translate(${-yAxisLabelOffset},${\n          paddedHeight / 2\n        }) rotate(-90)`}\n      >\n        {yLabel}\n      </text>\n    );\n  }, [yAxisLabelOffset, paddedHeight, yLabel]);\n\n  const findFieldByValue = (value: string): { x: number; y: number } => {\n    const tmp = data.find((el) => (el[color!] as string) === value);\n\n    return tmp\n      ? { x: tmp[x!] as number, y: tmp[y!] as number }\n      : { x: 0, y: 0 };\n  };\n\n  return (\n    <>\n      <svg width={width} height={height}>\n        <g\n          transform={`translate(${marginsForAxes.left},${marginsForAxes.top})`}\n        >\n          <AxisBottom xScale={xScale} height={paddedHeight} tickOffset={10} />\n\n          {yAxisLabel}\n\n          <AxisLeft yScale={yScale} width={paddedWidth} tickOffset={5} />\n\n          <text\n            className=\"axis-label\"\n            x={paddedWidth / 2}\n            y={paddedHeight + xAxisLabelOffset}\n            textAnchor=\"middle\"\n          >\n            {xLabel}\n          </text>\n\n          <AnimatedGroup>\n            {data.map((row, index) => {\n              return (\n                <circle\n                  data-tip={colorValue(row)}\n                  data-for=\"tooltip\"\n                  key={index}\n                  cx={xScale(xValue(row))}\n                  cy={yScale(yValue(row))}\n                  r={radius}\n                  opacity={opacity}\n                  fill={colorScale ? colorScale(colorValue(row)!) : 'green'}\n                />\n              );\n            })}\n          </AnimatedGroup>\n        </g>\n      </svg>\n      {showTooltip && (\n        <ReactTooltip\n          id=\"tooltip\"\n          place=\"top\"\n          effect=\"float\"\n          getContent={(val) => {\n            const xAndY = findFieldByValue(val);\n\n            return (\n              <Space direction=\"vertical\">\n                <Text style={{ color: 'white' }}>\n                  {color}: {val}\n                </Text>\n                <Text style={{ color: 'white' }}>\n                  {x}: {currencyFormatter.format(xAndY.x)}\n                </Text>\n                <Text style={{ color: 'white' }}>\n                  {y}: {currencyFormatter.format(xAndY.y)}\n                </Text>\n              </Space>\n            );\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import { Col, Row, Select, Space, Typography } from 'antd';\n\nimport { CSVRow } from '../../services/models/shared';\nimport { DSVParsedArray } from 'd3-dsv';\nimport { KeysMatching } from '../../types/shared';\nimport { PropsWithChildren } from 'react';\n\nconst { Text } = Typography;\nconst { Option } = Select;\n\nexport interface ScatterPlotAxesProps<T extends CSVRow> {\n  id: string;\n  selectedX: KeysMatching<T, number | undefined>;\n  selectedY: KeysMatching<T, number | undefined>;\n  selectedColor: KeysMatching<T, string | undefined>;\n  onSelectX: (xAxis: KeysMatching<T, number | undefined>) => void;\n  onSelectY: (yAxis: KeysMatching<T, number | undefined>) => void;\n  onSelectColor: (color: KeysMatching<T, string | undefined>) => void;\n  data: DSVParsedArray<T>;\n  labels: Record<string, string>;\n}\n\nexport const ScatterPlotAxes = <T extends CSVRow>({\n  id,\n  selectedX,\n  selectedY,\n  selectedColor,\n  onSelectX,\n  onSelectY,\n  onSelectColor,\n  data,\n  labels,\n}: PropsWithChildren<ScatterPlotAxesProps<T>>) => {\n  // this is probably not the best way of doing this\n  const numericOptions = Object.entries(data[0])\n    .filter((col) => typeof col[1] === 'number')\n    .map((col) => col[0]);\n\n  const stringOptions = Object.entries(data[0])\n    .filter((col) => typeof col[1] === 'string')\n    .map((col) => col[0]);\n\n  return (\n    <Row style={{ width: '100%' }} gutter={[12, 12]}>\n      <Col sm={7} md={7} lg={8}>\n        <Space direction=\"vertical\" size=\"small\" style={{ width: '100%' }}>\n          <Text id={`${id}-x-axis-label`} strong style={{ fontSize: 12 }}>\n            X Axis:\n          </Text>\n          <Select\n            aria-labelledby={`${id}-x-axis-label`}\n            style={{ width: '100%', maxWidth: '200px' }}\n            defaultValue={selectedX as string}\n            onChange={onSelectX as (value: string) => void}\n          >\n            {numericOptions.map((key) => (\n              <Option value={key} key={key}>\n                {labels[key]}\n              </Option>\n            ))}\n          </Select>\n        </Space>\n      </Col>\n      <Col sm={7} md={7} lg={8}>\n        <Space direction=\"vertical\" size=\"small\" style={{ width: '100%' }}>\n          <Text strong style={{ fontSize: 12 }}>\n            Y Axis:\n          </Text>\n          <Select\n            style={{ width: '100%', maxWidth: '200px' }}\n            defaultValue={selectedY as string}\n            onChange={onSelectY as (value: string) => void}\n          >\n            {numericOptions.map((key) => (\n              <Option value={key} key={key}>\n                {labels[key]}\n              </Option>\n            ))}\n          </Select>\n        </Space>\n      </Col>\n      <Col sm={7} md={7} lg={8}>\n        <Space direction=\"vertical\" size=\"small\" style={{ width: '100%' }}>\n          <Text strong style={{ fontSize: 12 }}>\n            Color:\n          </Text>\n          <Select\n            style={{ width: '100%', maxWidth: '200px' }}\n            defaultValue={selectedColor as string}\n            onChange={onSelectColor as (value: string) => void}\n          >\n            {stringOptions.map((key) => (\n              <Option value={key} key={key}>\n                {labels[key]}\n              </Option>\n            ))}\n          </Select>\n        </Space>\n      </Col>\n    </Row>\n  );\n};\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nvar Switch = React.forwardRef(function (_ref, ref) {\n  var _classNames;\n\n  var _ref$prefixCls = _ref.prefixCls,\n      prefixCls = _ref$prefixCls === void 0 ? 'rc-switch' : _ref$prefixCls,\n      className = _ref.className,\n      checked = _ref.checked,\n      defaultChecked = _ref.defaultChecked,\n      disabled = _ref.disabled,\n      loadingIcon = _ref.loadingIcon,\n      checkedChildren = _ref.checkedChildren,\n      unCheckedChildren = _ref.unCheckedChildren,\n      onClick = _ref.onClick,\n      onChange = _ref.onChange,\n      onKeyDown = _ref.onKeyDown,\n      restProps = _objectWithoutProperties(_ref, [\"prefixCls\", \"className\", \"checked\", \"defaultChecked\", \"disabled\", \"loadingIcon\", \"checkedChildren\", \"unCheckedChildren\", \"onClick\", \"onChange\", \"onKeyDown\"]);\n\n  var _useMergedState = useMergedState(false, {\n    value: checked,\n    defaultValue: defaultChecked\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerChecked = _useMergedState2[0],\n      setInnerChecked = _useMergedState2[1];\n\n  function triggerChange(newChecked, event) {\n    var mergedChecked = innerChecked;\n\n    if (!disabled) {\n      mergedChecked = newChecked;\n      setInnerChecked(mergedChecked);\n      onChange === null || onChange === void 0 ? void 0 : onChange(mergedChecked, event);\n    }\n\n    return mergedChecked;\n  }\n\n  function onInternalKeyDown(e) {\n    if (e.which === KeyCode.LEFT) {\n      triggerChange(false, e);\n    } else if (e.which === KeyCode.RIGHT) {\n      triggerChange(true, e);\n    }\n\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n  }\n\n  function onInternalClick(e) {\n    var ret = triggerChange(!innerChecked, e); // [Legacy] trigger onClick with value\n\n    onClick === null || onClick === void 0 ? void 0 : onClick(ret, e);\n  }\n\n  var switchClassName = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), innerChecked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n  return React.createElement(\"button\", Object.assign({}, restProps, {\n    type: \"button\",\n    role: \"switch\",\n    \"aria-checked\": innerChecked,\n    disabled: disabled,\n    className: switchClassName,\n    ref: ref,\n    onKeyDown: onInternalKeyDown,\n    onClick: onInternalClick\n  }), loadingIcon, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner\")\n  }, innerChecked ? checkedChildren : unCheckedChildren));\n});\nSwitch.displayName = 'Switch';\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport RcSwitch from 'rc-switch';\nimport classNames from 'classnames';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport Wave from '../_util/wave';\nimport { ConfigContext } from '../config-provider';\nimport SizeContext from '../config-provider/SizeContext';\nimport devWarning from '../_util/devWarning';\nvar Switch = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      customizeSize = _a.size,\n      loading = _a.loading,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      disabled = _a.disabled,\n      props = __rest(_a, [\"prefixCls\", \"size\", \"loading\", \"className\", \"disabled\"]);\n\n  devWarning('checked' in props || !('value' in props), 'Switch', '`value` is not a valid prop, do you mean `checked`?');\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var size = React.useContext(SizeContext);\n  var prefixCls = getPrefixCls('switch', customizePrefixCls);\n  var loadingIcon = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-handle\")\n  }, loading && /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: \"\".concat(prefixCls, \"-loading-icon\")\n  }));\n  var classes = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-small\"), (customizeSize || size) === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n  return /*#__PURE__*/React.createElement(Wave, {\n    insertExtraNode: true\n  }, /*#__PURE__*/React.createElement(RcSwitch, _extends({}, props, {\n    prefixCls: prefixCls,\n    className: classes,\n    disabled: disabled || loading,\n    ref: ref,\n    loadingIcon: loadingIcon\n  })));\n});\nSwitch.__ANT_SWITCH = true;\nSwitch.displayName = 'Switch';\nexport default Switch;","import { Slider, Space, Switch, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nexport interface YearSelectorProps {\n  defaultYear: number;\n  minYear: number;\n  maxYear: number;\n  incrementYearDisabled: boolean;\n  onChange: (year: number) => void;\n  toggleIncrementYear: (disable: boolean) => void;\n}\n\nexport const YearSelector: React.FC<YearSelectorProps> = ({\n  defaultYear,\n  minYear,\n  maxYear,\n  incrementYearDisabled,\n  onChange,\n  toggleIncrementYear,\n}) => {\n  return (\n    <Space style={{ width: '100%' }} direction=\"vertical\">\n      <Space\n        direction=\"horizontal\"\n        style={{ justifyContent: 'space-between', width: '100%' }}\n      >\n        <Text strong>\n          Select a Year: <Text style={{ color: 'green' }}>{defaultYear}</Text>\n        </Text>\n        <Space direction=\"horizontal\" size=\"small\">\n          <Switch\n            onChange={(val) => toggleIncrementYear(!val)}\n            checked={!incrementYearDisabled}\n          />\n          <Text strong>\n            {incrementYearDisabled ? 'Enable' : 'Disable'} Auto Increment\n          </Text>\n        </Space>\n      </Space>\n      <Slider\n        min={minYear}\n        max={maxYear}\n        value={defaultYear}\n        onChange={onChange}\n      />\n    </Space>\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useIncrementYear = (\n  maxYear: number,\n  minYear: number,\n  shouldIncrement: boolean,\n  currentSelectedYear: number,\n  setYear: (year: number) => void\n) => {\n  useEffect(() => {\n    if (!shouldIncrement) {\n      return;\n    }\n\n    const interval = setInterval(() => {\n      if (currentSelectedYear === maxYear) {\n        setYear(minYear);\n      } else {\n        setYear(currentSelectedYear + 1);\n      }\n    }, 500);\n\n    // eslint-disable-next-line consistent-return\n    return () => clearInterval(interval);\n  }, [currentSelectedYear, shouldIncrement, setYear, maxYear, minYear]);\n};\n","import { MinimumWage } from '../../../services/models/minimumWage';\nimport { ScatterPlot } from '../../../components/ScatterPlot';\nimport { YearSelector } from '../../../components/GeospatialChartIterated/YearSelector';\n\nimport { Constants } from '../constants';\nimport { Link } from 'react-router-dom';\nimport { PageLayout } from '../../../layout/PageLayout';\nimport { Typography } from 'antd';\nimport { useFallback } from '../../../hooks/useFallback';\nimport { useMinimumWageQuery } from '../../../services/hooks/useQuery';\nimport { useMemo, useState } from 'react';\nimport { DSVParsedArray } from 'd3-dsv';\nimport { useIncrementYear } from '../../../hooks/useIncrementYear';\n\nconst { Text } = Typography;\n\nexport interface ScatterPlotPageProps {}\n\nexport const ScatterPlotPage: React.FC<ScatterPlotPageProps> = () => {\n  const { data, isError, isLoading } = useMinimumWageQuery();\n\n  // hard code for the time being\n  const minYear = 2001;\n  const maxYear = 2020;\n\n  const [shouldDisableAutoIncrement, setShouldDisableAutoIncrementYear] =\n    useState(true);\n  const [selectedYear, setSelectedYear] = useState(minYear);\n\n  const filteredData = useMemo(() => {\n    return data?.filter((row) => row.studio && row.year === selectedYear) as\n      | DSVParsedArray<MinimumWage>\n      | undefined;\n  }, [data, selectedYear]);\n\n  useIncrementYear(\n    maxYear,\n    minYear,\n    !shouldDisableAutoIncrement,\n    selectedYear,\n    setSelectedYear\n  );\n\n  const { fallback } = useFallback<MinimumWage>(isLoading, isError, data);\n\n  if (fallback || !filteredData || filteredData.length === 0) {\n    return fallback;\n  }\n\n  const xAxisLabel = \"Studio Apartment Cost (Today's Dollars)\";\n  const yAxisLabel = \"Minimum Wage (Today's Dollars)\";\n  const selectedColor = 'State';\n\n  const description = (\n    <>\n      <Text>\n        A scatter plot depicting minimum wage as it pertains to rent cost. It\n        visualizes data supplied by the U.S Department of Labor and Housing and\n        Urban Development Department. Minimum wage data can be found{' '}\n        <Link to={{ pathname: Constants.minWageUrl }} target=\"_blank\">\n          here\n        </Link>\n        . Rent data can be found{' '}\n        <Link to={{ pathname: Constants.rentUrl }} target=\"_blank\">\n          here\n        </Link>\n        . Each circle color represents {selectedColor}.\n      </Text>\n    </>\n  );\n\n  return (\n    <PageLayout\n      pageTitle=\"Minimum Wage Scatter Plot\"\n      description={description}\n      menuItems={\n        <YearSelector\n          defaultYear={selectedYear}\n          minYear={minYear}\n          maxYear={maxYear}\n          incrementYearDisabled={shouldDisableAutoIncrement}\n          toggleIncrementYear={setShouldDisableAutoIncrementYear}\n          onChange={setSelectedYear}\n        />\n      }\n      generateChart={({ width }) => (\n        <ScatterPlot<MinimumWage>\n          width={width}\n          height={400}\n          margin={{ top: 30, right: 30, bottom: 60, left: 0 }}\n          data={filteredData}\n          xLabel={xAxisLabel}\n          yLabel={yAxisLabel}\n          x=\"studio\"\n          y=\"stateMinWageTodayDollars\"\n          color=\"state\"\n          radius={10}\n          showTooltip\n        />\n      )}\n    />\n  );\n};\n"],"sourceRoot":""}