{"version":3,"sources":["services/apis.ts","services/lib/maps.ts","services/lib/avocado.ts","services/lib/hurricane.ts","util/inflation.ts","services/lib/minimumWage.ts","services/hooks/useQuery.tsx","hooks/useFallback.tsx","hooks/useResizeChart.tsx","layout/PageLayout.tsx","pages/MinimumWage/constants.ts","util/currency.ts","../node_modules/rc-switch/es/index.js","../node_modules/antd/es/switch/index.js","components/GeospatialChartIterated/YearSelector.tsx","hooks/useIncrementYear.tsx","components/GeospatialChartIterated/hooks/useFetchStateData.tsx","components/GeospatialChartIterated/hooks/useGeospatialChart.tsx","components/GeospatialChartIterated/GeospatialChart.tsx","components/GeospatialChartIterated/hooks/usePanAndZoom.tsx","components/GeospatialChartIterated/ChartLegend.tsx","../node_modules/antd/es/divider/index.js","pages/MinimumWage/GeospatialChartIteratedPage/GeospatialChartIteratedPage.tsx"],"names":["BASE_URL","API","MinimumWageCSV","AvocadoCSV","HurricaneCSV","RentCSV","WorldMap","USMap","fetchWorldMap","a","fetch","json","worldMap","fetchUSMap","usMap","parseCSV","row","index","columns","date","parse","Date","averagePrice","Number","AveragePrice","totalVolume","totalBags","smallBags","largeBags","xLargeBags","type","year","region","month","getMonth","day","getDate","rowType","fetchAvocadoCSV","csv","avocadoCSV","filter","convertLatLong","lat","direction","slice","coordinate","refinedCoordinate","id","ID","name","Name","time","event","Event","status","Status","latitude","Latitude","longitude","Longitude","maxWind","minPressure","lowWindNE","lowWindSE","lowWindSW","lowWindNW","moderateWindNE","moderateWindSE","moderateWindSW","moderateWindNW","highWindNE","highWindSE","highWindSW","highWindNW","getFullYear","fetchHurricaneCSV","hurricaneCSV","accountForInflation","fromCPI","dollars","parseMinimumCsv","Year","state","State","stateMinWage","stateMinWageTodayDollars","federalMinWage","federalMinWageTodayDollars","effectiveMinWage","effectiveMinWageTodayDollars","cpiAverage","depLaborUncleanData","depLaborCleanedLowValue","depLaborCleanedLowValueTodayDollars","depLaborCleanedHighValue","depLaborCleanedHighValueTodayDollars","footnote","Footnote","parseRentCsv","studio","oneBedroom","twoBedroom","threeBedroom","fourBedroom","population","Population","merge","rents","minWages","map","minWage","rent","find","fetchMinimumWageCSV","useMinimumWageQuery","options","useQuery","useAvocadoQuery","useHurricaneQuery","useWorldMapQuery","useUSMapQuery","Text","Typography","useFallback","isLoading","isError","data","fallback","strong","style","color","initialDimensions","height","width","marginTop","marginRight","marginBottom","marginLeft","useResizeChart","ref","useRef","useState","setWidth","setHeight","useEffect","resizeObserver","ResizeObserver","entries","Array","isArray","length","entry","contentRect","current","element","observe","unobserve","newChartDimensions","dimensions","parsedDimensions","boundedHeight","Math","max","boundedWidth","combineChartDimensions","PageLayout","pageTitle","menuItems","description","generateChart","showDescriptionTitle","size","justify","gutter","xs","fontSize","Constants","minWageUrl","rentUrl","currencyFormatter","Intl","NumberFormat","currency","Switch","React","_ref","_classNames","_ref$prefixCls","prefixCls","className","checked","defaultChecked","disabled","loadingIcon","checkedChildren","unCheckedChildren","onClick","onChange","onKeyDown","restProps","_objectWithoutProperties","_useMergedState","useMergedState","value","defaultValue","_useMergedState2","_slicedToArray","innerChecked","setInnerChecked","triggerChange","newChecked","mergedChecked","switchClassName","classNames","_defineProperty","concat","Object","assign","role","e","which","KeyCode","LEFT","RIGHT","ret","displayName","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","_a","customizePrefixCls","customizeSize","loading","_a$className","props","devWarning","_React$useContext","ConfigContext","getPrefixCls","SizeContext","LoadingOutlined","classes","Wave","insertExtraNode","RcSwitch","_extends","__ANT_SWITCH","YearSelector","defaultYear","minYear","maxYear","incrementYearDisabled","toggleIncrementYear","justifyContent","val","min","useIncrementYear","shouldIncrement","currentSelectedYear","setYear","interval","setInterval","clearInterval","useGeospatialChart","rows","timeField","stateField","colorRepresentation","chosenTimeFieldValue","filteredRows","colorSaturationScale","scaleSequential","domain","extent","interpolator","interpolateBlues","states","reduce","acc","push","toString","colorExtent","curr","splitByCapitalLetter","text","split","word","charAt","toUpperCase","join","findFieldByStateOrDefault","field","el","GeospatialChart","chosenTimeField","onMouseOver","setRef","Loading","useFetchStateData","ReactTooltip","rebuild","svgZoom","zoom","on","select","attr","transform","scaleExtent","translateExtent","usePanAndZoom","usData","projection","geoAlbersUsa","translate","scale","path","geoPath","features","feature","objects","properties","d","stroke","strokeWidth","undefined","fill","place","effect","getContent","format","ChartLegend","colors","accumulator","cols","span","backgroundColor","Divider","ConfigConsumer","_props$type","_props$orientation","orientation","children","dashed","plain","orientationPrefix","hasChildren","classString","GeospatialChartIteratedPage","history","useHistory","shouldDisableAutoIncrement","setShouldDisableAutoIncrementYear","selectedYear","setSelectedYear","to","pathname","target","_","generatePath","AppRoutes","MinimumWageLineChartLookUp"],"mappings":"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","file":"static/js/9.7e3da13a.chunk.js","sourcesContent":["const BASE_URL = 'https://gist.githubusercontent.com/apetit2/';\n\nexport const API = {\n  MinimumWageCSV: `${BASE_URL}212a7cd715f8ba34eb637d014fffb12f/raw/0cc5e300ed1747be91ec391f4546e1a44c90d810/minimum-wage-data.csv`,\n  AvocadoCSV: `${BASE_URL}a3a8f61f0c56a1d1448804a584b7c1bb/raw/53be30feacedf088d4b8f609ccc509ca1e52591d/avocado.csv`,\n  HurricaneCSV: `${BASE_URL}5c1aa857558bc646281763252ea13d57/raw/daa565a0dc8c0dd99a63d162efad23037b067678/pacific.csv`,\n  RentCSV: `${BASE_URL}aaa39169ab48ff313cfb2bfe12486fef/raw/6d5308a46301f7f2b08c6974a3be7e7e138434f8/rent.csv`,\n  WorldMap: 'https://unpkg.com/world-atlas@1.1.4/world/110m.json',\n  USMap: 'https://unpkg.com/us-atlas@3.0.0/states-10m.json',\n};\n","import { USMap, WorldMap } from '../models/maps';\n\nimport { API } from '../apis';\n\nexport const fetchWorldMap = async () => {\n  const worldMap = (await (await fetch(API.WorldMap)).json()) as WorldMap;\n  return worldMap;\n};\n\nexport const fetchUSMap = async () => {\n  const usMap = (await (await fetch(API.USMap)).json()) as USMap;\n  return usMap;\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { DSVParsedArray, DSVRowString, csv } from 'd3';\n\nimport { API } from '../apis';\nimport { Avocado } from '../models/avocado';\nimport { parse } from 'date-fns';\n\nconst parseCSV: (\n  row: DSVRowString<string>,\n  index: number,\n  columns: string[]\n) => Avocado = (row, index, columns) => {\n  const date = parse(row.Date ?? '', 'yyyy-MM-dd', new Date());\n  return {\n    date: row.Date,\n    averagePrice: Number(row.AveragePrice),\n    totalVolume: Number(row['Total Volume']),\n    '4046': Number(row['4046']),\n    '4225': Number(row['4225']),\n    '4770': Number(row['4770']),\n    totalBags: Number(row['Total Bags']),\n    smallBags: Number(row['Small Bags']),\n    largeBags: Number(row['Large Bags']),\n    xLargeBags: Number(row['XLarge Bags']),\n    type: row.type,\n    year: Number(row.year),\n    region: row.region,\n    month: date.getMonth() + 1,\n    day: date.getDate(),\n    rowType: 'Avocado',\n  };\n};\n\nexport const fetchAvocadoCSV = async () => {\n  const avocadoCSV = (await csv(API.AvocadoCSV, parseCSV)).filter(\n    (row) => row.year !== 0\n  ) as DSVParsedArray<Avocado>;\n  return avocadoCSV;\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { DSVRowString, csv } from 'd3';\n\nimport { API } from '../apis';\nimport { Hurricane } from '../models/hurricane';\nimport { parse } from 'date-fns';\n\nconst convertLatLong = (lat: string | undefined) => {\n  const direction = lat?.slice(-1);\n  const coordinate = Number(lat?.slice(0, -1));\n  let refinedCoordinate = 0;\n  switch (direction) {\n    case 'W':\n    case 'S':\n      refinedCoordinate = Number(coordinate) / -1;\n      break;\n    default:\n      refinedCoordinate = Number(coordinate);\n  }\n\n  return refinedCoordinate;\n};\n\nconst parseCSV: (\n  row: DSVRowString<string>,\n  index: number,\n  columns: string[]\n) => Hurricane = (row, index, columns) => {\n  const date = parse(row.Date ?? '', 'yyyyMMdd', new Date());\n\n  return {\n    id: row.ID,\n    name: row.Name,\n    date: row.Date,\n    time: Number(row.time),\n    event: row.Event,\n    status: row.Status,\n    latitude: convertLatLong(row.Latitude),\n    longitude: convertLatLong(row.Longitude),\n    maxWind: Number(row['Maximum Wind']),\n    minPressure: Number(row['Minimum Pressure']),\n    lowWindNE: Number(row['Low Wind NE']),\n    lowWindSE: Number(row['Low Wind SE']),\n    lowWindSW: Number(row['Low Wind SW']),\n    lowWindNW: Number(row['Low Wind NW']),\n    moderateWindNE: Number(row['Moderate Wind NE']),\n    moderateWindSE: Number(row['Moderate Wind SE']),\n    moderateWindSW: Number(row['Moderate Wind SW']),\n    moderateWindNW: Number(row['Moderate Wind NW']),\n    highWindNE: Number(row['High Wind NE']),\n    highWindSE: Number(row['High Wind SE']),\n    highWindSW: Number(row['High Wind SW']),\n    highWindNW: Number(row['High Wind NW']),\n    year: date.getFullYear(),\n    month: date.getMonth() + 1,\n    day: date.getDate(),\n    rowType: 'Hurricane',\n  };\n};\n\nexport const fetchHurricaneCSV = async () => {\n  const hurricaneCSV = await csv(API.HurricaneCSV, parseCSV);\n  return hurricaneCSV;\n};\n","const CPI_TODAY = 260.28;\n\nexport const accountForInflation = (fromCPI: number, dollars: number) => {\n  return (dollars * fromCPI) / CPI_TODAY;\n};\n","import { DSVRowString, csv, DSVParsedArray } from 'd3';\nimport { accountForInflation } from '../../util/inflation';\n\nimport { API } from '../apis';\nimport { MinimumWage, Rent } from '../models/minimumWage';\n\nconst parseMinimumCsv: (\n  row: DSVRowString<string>,\n  index: number,\n  columns: string[]\n) => MinimumWage = (row) => {\n  return {\n    year: Number(row.Year),\n    state: row.State,\n    stateMinWage: Number(row['State.Minimum.Wage']),\n    stateMinWageTodayDollars: Number(row['State.Minimum.Wage.2020.Dollars']),\n    federalMinWage: Number(row['Federal.Minimum.Wage']),\n    federalMinWageTodayDollars: Number(\n      row['Federal.Minimum.Wage.2020.Dollars']\n    ),\n    effectiveMinWage: Number(row['Effective.Minimum.Wage']),\n    effectiveMinWageTodayDollars: Number(\n      row['Effective.Minimum.Wage.2020.Dollars']\n    ),\n    cpiAverage: Number(row['CPI.Average']),\n    depLaborUncleanData: row['Department.Of.Labor.Uncleaned.Data'],\n    depLaborCleanedLowValue: Number(\n      row['Department.Of.Labor.Cleaned.Low.Value']\n    ),\n    depLaborCleanedLowValueTodayDollars: Number(\n      row['Department.Of.Labor.Cleaned.Low.Value.2020.Dollars']\n    ),\n    depLaborCleanedHighValue: Number(\n      row['Department.Of.Labor.Cleaned.High.Value']\n    ),\n    depLaborCleanedHighValueTodayDollars: Number(\n      row['Department.Of.Labor.Cleaned.High.Value.2020.Dollars']\n    ),\n    footnote: row.Footnote,\n    rowType: 'MinWage',\n  };\n};\n\nconst parseRentCsv: (\n  row: DSVRowString<string>,\n  index: number,\n  columns: string[]\n) => Rent = (row) => {\n  return {\n    state: row.State,\n    year: Number(row.Year),\n    studio: Number(row['Rent 0 BR']),\n    oneBedroom: Number(row['Rent 1 BR']),\n    twoBedroom: Number(row['Rent 2 BR']),\n    threeBedroom: Number(row['Rent 3 BR']),\n    fourBedroom: Number(row['Rent 4 BR']),\n    population: Number(row.Population),\n    rowType: 'Rent',\n  };\n};\n\nconst merge = (\n  rents: DSVParsedArray<Rent>,\n  minWages: DSVParsedArray<MinimumWage>\n) => {\n  const res = minWages.map((minWage) => {\n    const rent = rents.find(\n      (row) => row.year === minWage.year && row.state === minWage.state\n    );\n\n    if (!rent) {\n      return minWage;\n    }\n\n    return {\n      ...minWage,\n      studio: accountForInflation(minWage.cpiAverage!, rent.studio!),\n      oneBedroom: accountForInflation(minWage.cpiAverage!, rent.oneBedroom!),\n      twoBedroom: accountForInflation(minWage.cpiAverage!, rent.twoBedroom!),\n      threeBedroom: accountForInflation(\n        minWage.cpiAverage!,\n        rent.threeBedroom!\n      ),\n      fourBedroom: accountForInflation(minWage.cpiAverage!, rent.fourBedroom!),\n      population: rent.population,\n    } as MinimumWage;\n  });\n\n  return res as DSVParsedArray<MinimumWage>;\n};\n\nexport const fetchMinimumWageCSV = async () => {\n  const minWages = await csv(API.MinimumWageCSV, parseMinimumCsv);\n  const rents = await csv(API.RentCSV, parseRentCsv);\n\n  return merge(rents, minWages);\n};\n\nexport const fetchRentCSV = async () => {\n  const res = await csv(API.RentCSV, parseRentCsv);\n  return res;\n};\n","import { USMap, WorldMap } from '../models/maps';\nimport { UseQueryOptions, useQuery } from 'react-query';\nimport { fetchUSMap, fetchWorldMap } from '../lib/maps';\n\nimport { Avocado } from '../models/avocado';\nimport { DSVParsedArray } from 'd3-dsv';\nimport { Hurricane } from '../models/hurricane';\nimport { MinimumWage, Rent } from '../models/minimumWage';\nimport { fetchAvocadoCSV } from '../lib/avocado';\nimport { fetchHurricaneCSV } from '../lib/hurricane';\nimport { fetchMinimumWageCSV, fetchRentCSV } from '../lib/minimumWage';\n\nconst useMinimumWageQuery = (\n  options?: UseQueryOptions<DSVParsedArray<MinimumWage>, Error>\n) =>\n  useQuery<DSVParsedArray<MinimumWage>, Error>(\n    'minWage',\n    fetchMinimumWageCSV,\n    options\n  );\n\nconst useRentQuery = (options?: UseQueryOptions<DSVParsedArray<Rent>, Error>) =>\n  useQuery<DSVParsedArray<Rent>, Error>('rent', fetchRentCSV, options);\n\nconst useAvocadoQuery = (\n  options?: UseQueryOptions<DSVParsedArray<Avocado>, Error>\n) =>\n  useQuery<DSVParsedArray<Avocado>, Error>('avocado', fetchAvocadoCSV, options);\n\nconst useHurricaneQuery = (\n  options?: UseQueryOptions<DSVParsedArray<Hurricane>, Error>\n) =>\n  useQuery<DSVParsedArray<Hurricane>, Error>(\n    'hurricane',\n    fetchHurricaneCSV,\n    options\n  );\n\nconst useWorldMapQuery = (options?: UseQueryOptions<WorldMap, Error>) =>\n  useQuery<WorldMap, Error>('worldMap', fetchWorldMap, options);\n\nconst useUSMapQuery = (options?: UseQueryOptions<USMap, Error>) =>\n  useQuery<USMap, Error>('usMap', fetchUSMap, options);\n\nexport {\n  useAvocadoQuery,\n  useHurricaneQuery,\n  useMinimumWageQuery,\n  useWorldMapQuery,\n  useUSMapQuery,\n  useRentQuery,\n};\n","import { CSVRow } from '../services/models/shared';\nimport { DSVParsedArray } from 'd3-dsv';\nimport { Loading } from '../components/Loading/Loading';\nimport { Typography } from 'antd';\n\nconst { Text } = Typography;\n\nexport const useFallback = <T extends CSVRow>(\n  isLoading: boolean,\n  isError: boolean,\n  data?: DSVParsedArray<T>\n) => {\n  let fallback = null;\n\n  if (isError) {\n    fallback = (\n      <Text strong style={{ color: 'red' }}>\n        Failed To Load Dataset.\n      </Text>\n    );\n  }\n\n  if (isLoading) {\n    fallback = <Loading />;\n  }\n\n  if (!data && !isLoading) {\n    fallback = <Text strong>No Data Found.</Text>;\n  }\n\n  return { fallback };\n};\n","// adapted from https://wattenberger.com/blog/react-and-d3\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { useEffect, useRef, useState } from 'react';\n\ninterface Dimensions {\n  height: number;\n  width: number;\n  marginTop: number;\n  marginRight: number;\n  marginBottom: number;\n  marginLeft: number;\n}\n\ninterface CombinedDimensions extends Dimensions {\n  boundedHeight: number;\n  boundedWidth: number;\n}\n\nconst initialDimensions = {\n  height: 400,\n  width: 0,\n  marginTop: 10,\n  marginRight: 10,\n  marginBottom: 40,\n  marginLeft: 75,\n};\n\nconst combineChartDimensions: (dimensions: Dimensions) => CombinedDimensions = (\n  dimensions\n) => {\n  const parsedDimensions = {\n    ...dimensions,\n    marginTop: dimensions.marginTop || 10,\n    marginRight: dimensions.marginRight || 10,\n    marginBottom: dimensions.marginBottom || 40,\n    marginLeft: dimensions.marginLeft || 75,\n  } as Dimensions;\n\n  return {\n    ...parsedDimensions,\n    boundedHeight: Math.max(\n      parsedDimensions.height -\n        parsedDimensions.marginTop -\n        parsedDimensions.marginBottom,\n      0\n    ),\n    boundedWidth: Math.max(\n      parsedDimensions.width -\n        parsedDimensions.marginLeft -\n        parsedDimensions.marginRight,\n      0\n    ),\n  };\n};\n\nexport const useResizeChart = () => {\n  const ref = useRef<HTMLDivElement | null>(null);\n\n  const [width, setWidth] = useState(initialDimensions.width);\n  const [height, setHeight] = useState(initialDimensions.height);\n\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver((entries) => {\n      if (!Array.isArray(entries) || !entries.length) {\n        return;\n      }\n\n      const entry = entries[0];\n      if (width !== entry.contentRect.width) {\n        setWidth(entry.contentRect.width);\n      }\n\n      if (height !== entry.contentRect.height) {\n        setHeight(entry.contentRect.height);\n      }\n    });\n\n    if (ref.current) {\n      const element = ref.current;\n      resizeObserver.observe(element);\n\n      return () => resizeObserver.unobserve(element);\n    }\n\n    return () => null;\n  }, [height, width]);\n\n  const newChartDimensions = combineChartDimensions({\n    ...initialDimensions,\n    width,\n    height,\n  });\n\n  return { ref, dimensions: newChartDimensions };\n};\n","import { Col, Row, Space, Typography } from 'antd';\n\nimport { ReactElement } from 'react';\nimport { useResizeChart } from '../hooks/useResizeChart';\n\nconst { Text } = Typography;\n\nexport interface PageLayoutProps {\n  pageTitle: string;\n  generateChart: (dimensions: {\n    width: number;\n    height: number;\n  }) => ReactElement;\n  description?: ReactElement;\n  menuItems?: ReactElement;\n  showDescriptionTitle?: boolean;\n}\n\nexport const PageLayout: React.FC<PageLayoutProps> = ({\n  pageTitle,\n  menuItems,\n  description,\n  generateChart,\n  showDescriptionTitle = true,\n}) => {\n  const { ref, dimensions } = useResizeChart();\n\n  return (\n    <div style={{ width: '100%' }} ref={ref}>\n      <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\n        <Row style={{ width: '100%' }} justify=\"space-between\" gutter={[0, 24]}>\n          <Col xs={7}>\n            <Text strong style={{ fontSize: 32 }}>\n              {pageTitle}\n            </Text>\n          </Col>\n          <Col xs={13}>{menuItems}</Col>\n        </Row>\n        {generateChart(dimensions)}\n        <Space direction=\"vertical\">\n          {showDescriptionTitle && (\n            <Text strong style={{ fontSize: 24 }}>\n              Description\n            </Text>\n          )}\n          <Text style={{ fontSize: 14 }}>{description}</Text>\n        </Space>\n      </Space>\n    </div>\n  );\n};\n","export const Constants = {\n  minWageUrl:\n    'https://gist.github.com/apetit2/212a7cd715f8ba34eb637d014fffb12f',\n  rentUrl: 'https://gist.github.com/apetit2/aaa39169ab48ff313cfb2bfe12486fef',\n} as const;\n","export const currencyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nvar Switch = React.forwardRef(function (_ref, ref) {\n  var _classNames;\n\n  var _ref$prefixCls = _ref.prefixCls,\n      prefixCls = _ref$prefixCls === void 0 ? 'rc-switch' : _ref$prefixCls,\n      className = _ref.className,\n      checked = _ref.checked,\n      defaultChecked = _ref.defaultChecked,\n      disabled = _ref.disabled,\n      loadingIcon = _ref.loadingIcon,\n      checkedChildren = _ref.checkedChildren,\n      unCheckedChildren = _ref.unCheckedChildren,\n      onClick = _ref.onClick,\n      onChange = _ref.onChange,\n      onKeyDown = _ref.onKeyDown,\n      restProps = _objectWithoutProperties(_ref, [\"prefixCls\", \"className\", \"checked\", \"defaultChecked\", \"disabled\", \"loadingIcon\", \"checkedChildren\", \"unCheckedChildren\", \"onClick\", \"onChange\", \"onKeyDown\"]);\n\n  var _useMergedState = useMergedState(false, {\n    value: checked,\n    defaultValue: defaultChecked\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerChecked = _useMergedState2[0],\n      setInnerChecked = _useMergedState2[1];\n\n  function triggerChange(newChecked, event) {\n    var mergedChecked = innerChecked;\n\n    if (!disabled) {\n      mergedChecked = newChecked;\n      setInnerChecked(mergedChecked);\n      onChange === null || onChange === void 0 ? void 0 : onChange(mergedChecked, event);\n    }\n\n    return mergedChecked;\n  }\n\n  function onInternalKeyDown(e) {\n    if (e.which === KeyCode.LEFT) {\n      triggerChange(false, e);\n    } else if (e.which === KeyCode.RIGHT) {\n      triggerChange(true, e);\n    }\n\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n  }\n\n  function onInternalClick(e) {\n    var ret = triggerChange(!innerChecked, e); // [Legacy] trigger onClick with value\n\n    onClick === null || onClick === void 0 ? void 0 : onClick(ret, e);\n  }\n\n  var switchClassName = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), innerChecked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n  return React.createElement(\"button\", Object.assign({}, restProps, {\n    type: \"button\",\n    role: \"switch\",\n    \"aria-checked\": innerChecked,\n    disabled: disabled,\n    className: switchClassName,\n    ref: ref,\n    onKeyDown: onInternalKeyDown,\n    onClick: onInternalClick\n  }), loadingIcon, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner\")\n  }, innerChecked ? checkedChildren : unCheckedChildren));\n});\nSwitch.displayName = 'Switch';\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport RcSwitch from 'rc-switch';\nimport classNames from 'classnames';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport Wave from '../_util/wave';\nimport { ConfigContext } from '../config-provider';\nimport SizeContext from '../config-provider/SizeContext';\nimport devWarning from '../_util/devWarning';\nvar Switch = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      customizeSize = _a.size,\n      loading = _a.loading,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      disabled = _a.disabled,\n      props = __rest(_a, [\"prefixCls\", \"size\", \"loading\", \"className\", \"disabled\"]);\n\n  devWarning('checked' in props || !('value' in props), 'Switch', '`value` is not a valid prop, do you mean `checked`?');\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var size = React.useContext(SizeContext);\n  var prefixCls = getPrefixCls('switch', customizePrefixCls);\n  var loadingIcon = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-handle\")\n  }, loading && /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: \"\".concat(prefixCls, \"-loading-icon\")\n  }));\n  var classes = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-small\"), (customizeSize || size) === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n  return /*#__PURE__*/React.createElement(Wave, {\n    insertExtraNode: true\n  }, /*#__PURE__*/React.createElement(RcSwitch, _extends({}, props, {\n    prefixCls: prefixCls,\n    className: classes,\n    disabled: disabled || loading,\n    ref: ref,\n    loadingIcon: loadingIcon\n  })));\n});\nSwitch.__ANT_SWITCH = true;\nSwitch.displayName = 'Switch';\nexport default Switch;","import { Slider, Space, Switch, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nexport interface YearSelectorProps {\n  defaultYear: number;\n  minYear: number;\n  maxYear: number;\n  incrementYearDisabled: boolean;\n  onChange: (year: number) => void;\n  toggleIncrementYear: (disable: boolean) => void;\n}\n\nexport const YearSelector: React.FC<YearSelectorProps> = ({\n  defaultYear,\n  minYear,\n  maxYear,\n  incrementYearDisabled,\n  onChange,\n  toggleIncrementYear,\n}) => {\n  return (\n    <Space style={{ width: '100%' }} direction=\"vertical\">\n      <Space\n        direction=\"horizontal\"\n        style={{ justifyContent: 'space-between', width: '100%' }}\n      >\n        <Text strong>\n          Select a Year: <Text style={{ color: 'green' }}>{defaultYear}</Text>\n        </Text>\n        <Space direction=\"horizontal\" size=\"small\">\n          <Switch\n            onChange={(val) => toggleIncrementYear(!val)}\n            checked={!incrementYearDisabled}\n          />\n          <Text strong>\n            {incrementYearDisabled ? 'Enable' : 'Disable'} Auto Increment\n          </Text>\n        </Space>\n      </Space>\n      <Slider\n        min={minYear}\n        max={maxYear}\n        value={defaultYear}\n        onChange={onChange}\n      />\n    </Space>\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useIncrementYear = (\n  maxYear: number,\n  minYear: number,\n  shouldIncrement: boolean,\n  currentSelectedYear: number,\n  setYear: (year: number) => void\n) => {\n  useEffect(() => {\n    if (!shouldIncrement) {\n      return;\n    }\n\n    const interval = setInterval(() => {\n      if (currentSelectedYear === maxYear) {\n        setYear(minYear);\n      } else {\n        setYear(currentSelectedYear + 1);\n      }\n    }, 500);\n\n    // eslint-disable-next-line consistent-return\n    return () => clearInterval(interval);\n  }, [currentSelectedYear, shouldIncrement, setYear, maxYear, minYear]);\n};\n","import { Loading } from '../../Loading/Loading';\nimport { Map } from '../../../services/models/maps';\nimport { ReactElement } from 'react';\nimport { Typography } from 'antd';\nimport { useUSMapQuery } from '../../../services/hooks/useQuery';\n\nconst { Text } = Typography;\n\nexport const useFetchStateData: () => {\n  data: Map;\n  fallback: ReactElement | undefined;\n} = () => {\n  const { data, isError, isLoading } = useUSMapQuery();\n\n  let fallback: ReactElement | undefined;\n  if (isLoading) {\n    fallback = <Loading />;\n  }\n\n  if (isError || !data) {\n    fallback = <Text>Some error</Text>;\n  }\n\n  return {\n    data: data!,\n    fallback,\n  };\n};\n","import { DSVParsedArray, extent, interpolateBlues, scaleSequential } from 'd3';\n\nimport { CSVRow } from '../../../services/models/shared';\n\nexport const useGeospatialChart = (\n  rows: DSVParsedArray<CSVRow>,\n  timeField: string,\n  stateField: string,\n  colorRepresentation: string,\n  chosenTimeFieldValue: number\n) => {\n  // filter the rows by some time value (preferably year)\n  const filteredRows = rows.filter(\n    (row) => Number(row[timeField]) === chosenTimeFieldValue\n  );\n\n  // color saturation scale\n  const colorSaturationScale = scaleSequential()\n    .domain(\n      extent(filteredRows, (row) => {\n        return Number(row[colorRepresentation]);\n      }) as [number, number]\n    )\n    .interpolator(interpolateBlues);\n\n  // create an array of states with some representation of some value\n  const states = filteredRows.reduce((acc, current) => {\n    acc.push({\n      state: current[stateField]?.toString() ?? '',\n      value: Number(current[colorRepresentation]),\n      color: colorSaturationScale(Number(current[colorRepresentation])),\n    });\n    return acc;\n  }, [] as { state: string; value: number; color: string }[]);\n\n  // create max and min for color values\n  const colorExtent = states.reduce(\n    (acc: null | { max: number; min: number }, curr) => {\n      if (!acc) {\n        return { max: curr.value, min: curr.value };\n      }\n\n      if (curr.value > acc.max) {\n        return { max: curr.value, min: acc.min };\n      }\n\n      if (curr.value < acc.min) {\n        return { max: acc.min, min: curr.value };\n      }\n\n      return acc;\n    },\n    null\n  );\n\n  const splitByCapitalLetter = (text: string) =>\n    text\n      .split(/(?=[A-Z])/)\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n\n  const findFieldByStateOrDefault = <T extends string | number>(\n    state: string,\n    field: 'value' | 'color',\n    defaultValue: T\n  ): T => {\n    return (\n      (states.find((el) => el.state === state)?.[field] as T) ?? defaultValue\n    );\n  };\n\n  return {\n    colorSaturationScale,\n    filteredRows,\n    states,\n    colorExtent,\n    splitByCapitalLetter,\n    findFieldByStateOrDefault,\n  };\n};\n","import './GeospatialChart.css';\n\nimport { DSVParsedArray, geoAlbersUsa, geoPath } from 'd3';\nimport { MouseEvent, useEffect, useState } from 'react';\nimport { Space, Typography } from 'antd';\n\nimport { CSVRow } from '../../services/models/shared';\nimport { KeysMatching } from '../../types/shared';\nimport ReactTooltip from 'react-tooltip';\nimport { USMap } from '../../services/models/maps';\nimport { currencyFormatter } from '../../util/currency';\nimport { feature } from 'topojson-client';\nimport { useFetchStateData } from './hooks/useFetchStateData';\nimport { useGeospatialChart } from './hooks/useGeospatialChart';\nimport { usePanAndZoom } from './hooks/usePanAndZoom';\n\nconst { Text } = Typography;\n\nexport interface GeospatialChartProps<T extends CSVRow> {\n  width: number;\n  height: number;\n  rows: DSVParsedArray<CSVRow>;\n  timeField: KeysMatching<T, number | undefined>;\n  stateField: KeysMatching<T, string | undefined>;\n  colorRepresentation: KeysMatching<T, number | undefined>;\n  chosenTimeField: number;\n  onMouseOver?: (event: MouseEvent<SVGPathElement>, state: string) => void;\n  onClick?: (event: MouseEvent<SVGPathElement>, state: string) => void;\n}\n\nexport const GeospatialChart = <T extends CSVRow>({\n  width,\n  height,\n  rows,\n  timeField,\n  stateField,\n  colorRepresentation,\n  chosenTimeField,\n  onMouseOver,\n  onClick,\n}: GeospatialChartProps<T>) => {\n  const [ref, setRef] = useState<SVGSVGElement | null>(null);\n  const { data, fallback } = useFetchStateData();\n\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  }, []);\n\n  usePanAndZoom(ref, height, width);\n  const { findFieldByStateOrDefault, splitByCapitalLetter } =\n    useGeospatialChart(\n      rows,\n      timeField as string,\n      stateField as string,\n      colorRepresentation as string,\n      chosenTimeField\n    );\n\n  if (fallback) {\n    return fallback;\n  }\n\n  const generateScale = () => {\n    if (width / 1.3 > 800) {\n      return 800;\n    }\n\n    return width / 1.3;\n  };\n\n  const usData = data as USMap;\n  const projection = geoAlbersUsa()\n    .translate([width / 2, height / 2])\n    .scale(generateScale());\n  const path = geoPath().projection(projection);\n  const { features } = feature(usData, usData.objects.states);\n\n  return (\n    <>\n      <svg height={height} width={width} ref={setRef}>\n        <g id=\"states\">\n          {features.map((value) => (\n            <path\n              data-tip={value.properties.name}\n              data-for=\"states-tooltip\"\n              className=\"state\"\n              d={path(value) as string}\n              stroke=\"black\"\n              strokeWidth={0.5}\n              key={`${value.properties.name}`}\n              onClick={(event) => {\n                ReactTooltip.rebuild();\n                if (onClick) {\n                  onClick(event, value.properties.name);\n                }\n              }}\n              onMouseOver={\n                onMouseOver\n                  ? (event) => onMouseOver(event, value.properties.name)\n                  : undefined\n              }\n              fill={findFieldByStateOrDefault<string>(\n                value.properties.name,\n                'color',\n                'green'\n              )}\n            />\n          ))}\n        </g>\n      </svg>\n      <ReactTooltip\n        id=\"states-tooltip\"\n        place=\"top\"\n        effect=\"float\"\n        getContent={(state) => {\n          return (\n            <Space direction=\"vertical\">\n              <Text style={{ color: 'white' }}>State: {state}</Text>\n              <Text style={{ color: 'white' }}>\n                {splitByCapitalLetter(colorRepresentation as string)}:{' '}\n                {currencyFormatter.format(\n                  findFieldByStateOrDefault<number>(state, 'value', 0)\n                )}\n              </Text>\n            </Space>\n          );\n        }}\n      />\n    </>\n  );\n};\n","import { select, zoom } from 'd3';\n\nimport { useEffect } from 'react';\n\nexport const usePanAndZoom = (\n  ref: SVGSVGElement | null,\n  height: number,\n  width: number\n) => {\n  useEffect(() => {\n    if (ref) {\n      const svgZoom = zoom<SVGSVGElement, unknown>();\n\n      svgZoom.on('zoom', (event) =>\n        select('#states').attr('transform', event.transform)\n      );\n      svgZoom.scaleExtent([1, 8]);\n      svgZoom.translateExtent([\n        [0, height - 400],\n        [width, height],\n      ]);\n\n      select(ref).call(svgZoom);\n    }\n  }, [ref, height, width]);\n};\n","import { Col, Row, Typography } from 'antd';\n\nimport { CSVRow } from '../../services/models/shared';\nimport { DSVParsedArray } from 'd3';\nimport { KeysMatching } from '../../types/shared';\nimport { currencyFormatter } from '../../util/currency';\nimport { useGeospatialChart } from './hooks/useGeospatialChart';\n\nconst { Text } = Typography;\n\nexport interface ChartLegendProps<T extends CSVRow> {\n  timeField: KeysMatching<T, number | undefined>;\n  stateField: KeysMatching<T, string | undefined>;\n  colorRepresentation: KeysMatching<T, number | undefined>;\n  chosenTimeField: number;\n  rows: DSVParsedArray<CSVRow>;\n}\n\nexport const ChartLegend = <T extends CSVRow>({\n  timeField,\n  stateField,\n  colorRepresentation,\n  chosenTimeField,\n  rows,\n}: ChartLegendProps<T>) => {\n  const { colorExtent, colorSaturationScale } = useGeospatialChart(\n    rows,\n    timeField as string,\n    stateField as string,\n    colorRepresentation as string,\n    chosenTimeField\n  );\n\n  const colors: string[] = [];\n  const max = colorExtent?.max || 0;\n  let min = colorExtent?.min || 0;\n\n  const accumulator = (max - min) / 8;\n\n  while (colors.length < 8) {\n    colors.push(colorSaturationScale(min));\n    min += accumulator;\n  }\n\n  // the 200 is some arbitrary number\n  const width = 200 / colors.length;\n  const cols = colors.map((color) => (\n    <Col\n      span={3}\n      style={{ height: '25px', width, backgroundColor: color }}\n      key={color}\n    />\n  ));\n\n  return (\n    <>\n      <Row justify=\"end\">{cols}</Row>\n      <Row justify=\"space-between\">\n        <Text>{currencyFormatter.format(colorExtent?.min ?? 0)}</Text>\n        <Text>{currencyFormatter.format(max)}</Text>\n      </Row>\n    </>\n  );\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","import {\n  ChartLegend,\n  GeospatialChart,\n  YearSelector,\n} from '../../../components/GeospatialChartIterated';\nimport { Col, Divider, Row, Space, Typography } from 'antd';\nimport { Link, generatePath, useHistory } from 'react-router-dom';\n\nimport { AppRoutes } from '../../../appRoutes';\nimport { Constants } from '../constants';\nimport { MinimumWage } from '../../../services/models/minimumWage';\nimport { PageLayout } from '../../../layout/PageLayout';\nimport { useFallback } from '../../../hooks/useFallback';\nimport { useIncrementYear } from '../../../hooks/useIncrementYear';\nimport { useMinimumWageQuery } from '../../../services/hooks/useQuery';\nimport { useState } from 'react';\n\nexport interface GeospatialChartIteratedPageProps {}\n\nconst { Text } = Typography;\n\nexport const GeospatialChartIteratedPage: React.FC<GeospatialChartIteratedPageProps> =\n  () => {\n    const history = useHistory();\n    const { data, isError, isLoading } = useMinimumWageQuery();\n\n    const minYear = data?.[0].year || 1968;\n    const maxYear = data?.[data.length - 1]?.year || 2020;\n\n    const [shouldDisableAutoIncrement, setShouldDisableAutoIncrementYear] =\n      useState(true);\n    const [selectedYear, setSelectedYear] = useState(minYear);\n\n    const { fallback } = useFallback<MinimumWage>(isLoading, isError, data);\n\n    useIncrementYear(\n      maxYear,\n      minYear,\n      !shouldDisableAutoIncrement,\n      selectedYear || 1968,\n      setSelectedYear\n    );\n\n    if (fallback || !data) {\n      return fallback;\n    }\n\n    const description = (\n      <Space direction=\"vertical\">\n        <Row gutter={[0, 24]} justify=\"end\">\n          <Col span={10}>\n            <ChartLegend<MinimumWage>\n              timeField=\"year\"\n              stateField=\"state\"\n              colorRepresentation=\"effectiveMinWageTodayDollars\"\n              chosenTimeField={selectedYear}\n              rows={data}\n            />\n          </Col>\n        </Row>\n        <Divider />\n        <Text strong style={{ fontSize: 24 }}>\n          Description\n        </Text>\n        <Text>\n          A geospatial chart depicting effective minimum wage data for all U.S\n          states and territories since 1968. It visualizes data supplied by the\n          U.S Department of Labor. All data can be found in the{' '}\n          <Link to={{ pathname: Constants.minWageUrl }} target=\"_blank\">\n            Minimum Wage Dataset\n          </Link>\n          .\n        </Text>\n        <ul>\n          <li>Dollar amounts shown are in 2020 dollars.</li>\n          <li>Darker state colors represent higher minimum wages.</li>\n        </ul>\n        <Divider />\n        <Text strong style={{ fontSize: 24 }}>\n          What&apos;s New\n        </Text>\n        <ul>\n          <li>Toggle that automates year incrementation</li>\n          <li>Legend showing what colors represent on the geospatial chart</li>\n          <li>\n            When hovering on a state, show the effective minimum wage for that\n            state in a box below the chart\n          </li>\n          <li>Zoom and pan functionality is working.</li>\n        </ul>\n        <Divider />\n        <Text strong style={{ fontSize: 24 }}>\n          Still To Do\n        </Text>\n        <ul>\n          <li>\n            For smaller screen sizes, figure out why the chart does not center\n            properly on load\n          </li>\n          <li>\n            Implement an actual tooltip that appears when hovering on a state\n          </li>\n        </ul>\n      </Space>\n    );\n\n    return (\n      <PageLayout\n        pageTitle=\"Minimum Wage Geospatial Chart\"\n        description={description}\n        showDescriptionTitle={false}\n        menuItems={\n          <YearSelector\n            defaultYear={selectedYear}\n            minYear={minYear}\n            maxYear={maxYear}\n            incrementYearDisabled={shouldDisableAutoIncrement}\n            toggleIncrementYear={setShouldDisableAutoIncrementYear}\n            onChange={setSelectedYear}\n          />\n        }\n        generateChart={({ width }) => (\n          <GeospatialChart<MinimumWage>\n            width={width}\n            height={400}\n            rows={data}\n            timeField=\"year\"\n            stateField=\"state\"\n            colorRepresentation=\"effectiveMinWageTodayDollars\"\n            chosenTimeField={selectedYear}\n            onClick={(_, state) =>\n              history.push(\n                generatePath(AppRoutes.MinimumWageLineChartLookUp, { state })\n              )\n            }\n          />\n        )}\n      />\n    );\n  };\n"],"sourceRoot":""}